
/home/Serpens/Programming/Repository/SimpleMeteoStation/build/STM32/Debug/STM32F103.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000013c  0800010c  0800010c  0001010c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000248  08000250  00010250  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .init_array   00000004  08000248  08000248  00010248  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  0800024c  0800024c  0001024c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         00000000  20000000  20000000  00010250  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          0000001c  20000000  08000250  00020000  2**2
                  ALLOC
  7 ._user_heap_stack 00000604  2000001c  08000250  0002001c  2**0
                  ALLOC
  8 .ARM.attributes 00000029  00000000  00000000  00010250  2**0
                  CONTENTS, READONLY
  9 .comment      00000046  00000000  00000000  00010279  2**0
                  CONTENTS, READONLY
 10 .debug_info   000003a3  00000000  00000000  000102bf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_abbrev 00000261  00000000  00000000  00010662  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_aranges 00000090  00000000  00000000  000108c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_rnglists 00000058  00000000  00000000  00010958  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_line   0000042e  00000000  00000000  000109b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_str    00000574  00000000  00000000  00010dde  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_frame  0000007c  00000000  00000000  00011354  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_loclists 000000d3  00000000  00000000  000113d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line_str 000000be  00000000  00000000  000114a3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .isr_vector:

08000000 <g_pfnVectors>:
 8000000:	20004fff 	strdcs	r4, [r0], -pc	; <UNPREDICTABLE>
 8000004:	0800019d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8}
 8000008:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 800000c:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 8000010:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 8000014:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 8000018:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
	...
 800002c:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 8000030:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 800003c:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 8000040:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 8000044:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 8000048:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 800004c:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 8000050:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 8000054:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 8000058:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 800005c:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 8000060:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 8000064:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 8000068:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 800006c:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 8000070:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 8000074:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 8000078:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 800007c:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 8000080:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 8000084:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 8000088:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 800008c:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 8000090:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 8000094:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 8000098:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 800009c:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 80000a0:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 80000a4:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 80000a8:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 80000ac:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 80000b0:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 80000b4:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 80000b8:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 80000bc:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 80000c0:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 80000c4:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 80000c8:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 80000cc:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 80000d0:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 80000d4:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 80000d8:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 80000dc:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 80000e0:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 80000e4:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
 80000e8:	080001e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r8}
	...
 8000108:	f108f85f 			; <UNDEFINED> instruction: 0xf108f85f

Disassembly of section .text:

0800010c <deregister_tm_clones>:
 800010c:	4803      	ldr	r0, [pc, #12]	; (800011c <deregister_tm_clones+0x10>)
 800010e:	4b04      	ldr	r3, [pc, #16]	; (8000120 <deregister_tm_clones+0x14>)
 8000110:	4283      	cmp	r3, r0
 8000112:	d002      	beq.n	800011a <deregister_tm_clones+0xe>
 8000114:	4b03      	ldr	r3, [pc, #12]	; (8000124 <deregister_tm_clones+0x18>)
 8000116:	b103      	cbz	r3, 800011a <deregister_tm_clones+0xe>
 8000118:	4718      	bx	r3
 800011a:	4770      	bx	lr
 800011c:	20000000 	andcs	r0, r0, r0
 8000120:	20000000 	andcs	r0, r0, r0
 8000124:	00000000 	andeq	r0, r0, r0

08000128 <register_tm_clones>:
 8000128:	4805      	ldr	r0, [pc, #20]	; (8000140 <register_tm_clones+0x18>)
 800012a:	4b06      	ldr	r3, [pc, #24]	; (8000144 <register_tm_clones+0x1c>)
 800012c:	1a1b      	subs	r3, r3, r0
 800012e:	0fd9      	lsrs	r1, r3, #31
 8000130:	eb01 01a3 	add.w	r1, r1, r3, asr #2
 8000134:	1049      	asrs	r1, r1, #1
 8000136:	d002      	beq.n	800013e <register_tm_clones+0x16>
 8000138:	4b03      	ldr	r3, [pc, #12]	; (8000148 <register_tm_clones+0x20>)
 800013a:	b103      	cbz	r3, 800013e <register_tm_clones+0x16>
 800013c:	4718      	bx	r3
 800013e:	4770      	bx	lr
 8000140:	20000000 	andcs	r0, r0, r0
 8000144:	20000000 	andcs	r0, r0, r0
 8000148:	00000000 	andeq	r0, r0, r0

0800014c <__do_global_dtors_aux>:
 800014c:	b510      	push	{r4, lr}
 800014e:	4c06      	ldr	r4, [pc, #24]	; (8000168 <__do_global_dtors_aux+0x1c>)
 8000150:	7823      	ldrb	r3, [r4, #0]
 8000152:	b943      	cbnz	r3, 8000166 <__do_global_dtors_aux+0x1a>
 8000154:	f7ff ffda 	bl	800010c <deregister_tm_clones>
 8000158:	4b04      	ldr	r3, [pc, #16]	; (800016c <__do_global_dtors_aux+0x20>)
 800015a:	b113      	cbz	r3, 8000162 <__do_global_dtors_aux+0x16>
 800015c:	4804      	ldr	r0, [pc, #16]	; (8000170 <__do_global_dtors_aux+0x24>)
 800015e:	f3af 8000 	nop.w
 8000162:	2301      	movs	r3, #1
 8000164:	7023      	strb	r3, [r4, #0]
 8000166:	bd10      	pop	{r4, pc}
 8000168:	20000000 	andcs	r0, r0, r0
 800016c:	00000000 	andeq	r0, r0, r0
 8000170:	08000230 	stmdaeq	r0, {r4, r5, r9}

08000174 <frame_dummy>:
 8000174:	b508      	push	{r3, lr}
 8000176:	4b04      	ldr	r3, [pc, #16]	; (8000188 <frame_dummy+0x14>)
 8000178:	b11b      	cbz	r3, 8000182 <frame_dummy+0xe>
 800017a:	4904      	ldr	r1, [pc, #16]	; (800018c <frame_dummy+0x18>)
 800017c:	4804      	ldr	r0, [pc, #16]	; (8000190 <frame_dummy+0x1c>)
 800017e:	f3af 8000 	nop.w
 8000182:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8000186:	e7cf      	b.n	8000128 <register_tm_clones>
 8000188:	00000000 	andeq	r0, r0, r0
 800018c:	20000004 	andcs	r0, r0, r4
 8000190:	08000230 	stmdaeq	r0, {r4, r5, r9}

08000194 <main>:
int main()
{
	return 1;
 8000194:	2001      	movs	r0, #1
 8000196:	4770      	bx	lr

08000198 <SystemInit>:

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000198:	4770      	bx	lr
 800019a:	bf00      	nop

0800019c <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800019c:	480c      	ldr	r0, [pc, #48]	; (80001d0 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 800019e:	490d      	ldr	r1, [pc, #52]	; (80001d4 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 80001a0:	4a0d      	ldr	r2, [pc, #52]	; (80001d8 <LoopFillZerobss+0x1a>)
  movs r3, #0
 80001a2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80001a4:	e002      	b.n	80001ac <LoopCopyDataInit>

080001a6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80001a6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80001a8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80001aa:	3304      	adds	r3, #4

080001ac <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80001ac:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80001ae:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80001b0:	d3f9      	bcc.n	80001a6 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80001b2:	4a0a      	ldr	r2, [pc, #40]	; (80001dc <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 80001b4:	4c0a      	ldr	r4, [pc, #40]	; (80001e0 <LoopFillZerobss+0x22>)
  movs r3, #0
 80001b6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80001b8:	e001      	b.n	80001be <LoopFillZerobss>

080001ba <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80001ba:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80001bc:	3204      	adds	r2, #4

080001be <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80001be:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80001c0:	d3fb      	bcc.n	80001ba <FillZerobss>

/* Call the clock system intitialization function.*/
    bl  SystemInit
 80001c2:	f7ff ffe9 	bl	8000198 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80001c6:	f000 f80f 	bl	80001e8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80001ca:	f7ff ffe3 	bl	8000194 <main>
  bx lr
 80001ce:	4770      	bx	lr
  ldr r0, =_sdata
 80001d0:	20000000 	andcs	r0, r0, r0
  ldr r1, =_edata
 80001d4:	20000000 	andcs	r0, r0, r0
  ldr r2, =_sidata
 80001d8:	08000250 	stmdaeq	r0, {r4, r6, r9}
  ldr r2, =_sbss
 80001dc:	20000000 	andcs	r0, r0, r0
  ldr r4, =_ebss
 80001e0:	2000001c 	andcs	r0, r0, ip, lsl r0

080001e4 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80001e4:	e7fe      	b.n	80001e4 <ADC1_2_IRQHandler>
	...

080001e8 <__libc_init_array>:
 80001e8:	b570      	push	{r4, r5, r6, lr}
 80001ea:	2600      	movs	r6, #0
 80001ec:	4d0c      	ldr	r5, [pc, #48]	; (8000220 <__libc_init_array+0x38>)
 80001ee:	4c0d      	ldr	r4, [pc, #52]	; (8000224 <__libc_init_array+0x3c>)
 80001f0:	1b64      	subs	r4, r4, r5
 80001f2:	10a4      	asrs	r4, r4, #2
 80001f4:	42a6      	cmp	r6, r4
 80001f6:	d109      	bne.n	800020c <__libc_init_array+0x24>
 80001f8:	f000 f81a 	bl	8000230 <_init>
 80001fc:	2600      	movs	r6, #0
 80001fe:	4d0a      	ldr	r5, [pc, #40]	; (8000228 <__libc_init_array+0x40>)
 8000200:	4c0a      	ldr	r4, [pc, #40]	; (800022c <__libc_init_array+0x44>)
 8000202:	1b64      	subs	r4, r4, r5
 8000204:	10a4      	asrs	r4, r4, #2
 8000206:	42a6      	cmp	r6, r4
 8000208:	d105      	bne.n	8000216 <__libc_init_array+0x2e>
 800020a:	bd70      	pop	{r4, r5, r6, pc}
 800020c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000210:	4798      	blx	r3
 8000212:	3601      	adds	r6, #1
 8000214:	e7ee      	b.n	80001f4 <__libc_init_array+0xc>
 8000216:	f855 3b04 	ldr.w	r3, [r5], #4
 800021a:	4798      	blx	r3
 800021c:	3601      	adds	r6, #1
 800021e:	e7f2      	b.n	8000206 <__libc_init_array+0x1e>
 8000220:	08000248 	stmdaeq	r0, {r3, r6, r9}
 8000224:	08000248 	stmdaeq	r0, {r3, r6, r9}
 8000228:	08000248 	stmdaeq	r0, {r3, r6, r9}
 800022c:	0800024c 	stmdaeq	r0, {r2, r3, r6, r9}

08000230 <_init>:
 8000230:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000232:	bf00      	nop
 8000234:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000236:	bc08      	pop	{r3}
 8000238:	469e      	mov	lr, r3
 800023a:	4770      	bx	lr

0800023c <_fini>:
 800023c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800023e:	bf00      	nop
 8000240:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000242:	bc08      	pop	{r3}
 8000244:	469e      	mov	lr, r3
 8000246:	4770      	bx	lr

Disassembly of section .init_array:

08000248 <__frame_dummy_init_array_entry>:
 8000248:	08000175 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8}

Disassembly of section .fini_array:

0800024c <__do_global_dtors_aux_fini_array_entry>:
 800024c:	0800014d 	stmdaeq	r0, {r0, r2, r3, r6, r8}

Disassembly of section .bss:

20000000 <__TMC_END__>:
20000000:	00000000 	andeq	r0, r0, r0

20000004 <object.0>:
	...

Disassembly of section ._user_heap_stack:

2000001c <._user_heap_stack>:
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
#if defined(STM32F100xB) || defined(STM32F100xE)
  uint32_t prediv1factor = 0U;
#endif /* STM32F100xB or STM32F100xE */
    
  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & RCC_CFGR_SWS;
   0:	00002841 	andeq	r2, r0, r1, asr #16
   4:	61656100 	cmnvs	r5, r0, lsl #2
  
  switch (tmp)
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000001e 	andeq	r0, r0, lr, lsl r0
      break;
  }
  
  /* Compute HCLK clock frequency ----------------*/
  /* Get HCLK prescaler */
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
  10:	4d2d3705 	stcmi	7, cr3, [sp, #-20]!	; 0xffffffec
  /* HCLK clock frequency */
  SystemCoreClock >>= tmp;  
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
  18:	1202094d 	andne	r0, r2, #1261568	; 0x134000
  SystemCoreClock >>= tmp;  
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
}
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
      pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
  24:	22011a01 	andcs	r1, r1, #4096	; 0x1000
      pllmull = ( pllmull >> 18U) + 2U;
  28:	Address 0x0000000000000028 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
  tmp = RCC->CFGR & RCC_CFGR_SWS;
   0:	3a434347 	bcc	10d0d24 <_Min_Stack_Size+0x10d0924>
   4:	65462820 	strbvs	r2, [r6, #-2080]	; 0xfffff7e0
  switch (tmp)
   8:	61726f64 	cmnvs	r2, r4, ror #30
   c:	2e323120 	rsfcssp	f3, f2, f0
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
  10:	2d302e32 	ldccs	14, cr2, [r0, #-200]!	; 0xffffff38
  SystemCoreClock >>= tmp;  
  14:	63662e31 	cmnvs	r6, #784	; 0x310
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
  18:	20293633 	eorcs	r3, r9, r3, lsr r6
  SystemCoreClock >>= tmp;  
  1c:	322e3231 	eorcc	r3, lr, #268435459	; 0x10000003
}
  20:	4700302e 	strmi	r3, [r0, -lr, lsr #32]
      pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
  24:	203a4343 	eorscs	r4, sl, r3, asr #6
      pllmull = ( pllmull >> 18U) + 2U;
  28:	64654628 	strbtvs	r4, [r5], #-1576	; 0xfffff9d8
  2c:	2061726f 	rsbcs	r7, r1, pc, ror #4
      if (pllsource == 0x00U)
  30:	312e3131 			; <UNDEFINED> instruction: 0x312e3131
        if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
  34:	322d302e 	eorcc	r3, sp, #46	; 0x2e
          SystemCoreClock = HSE_VALUE * pllmull;
  38:	3363662e 	cmncc	r3, #48234496	; 0x2e00000
  3c:	31202936 			; <UNDEFINED> instruction: 0x31202936
          SystemCoreClock = (HSE_VALUE >> 1U) * pllmull;
  40:	2e312e31 	mrccs	14, 1, r2, cr1, cr1, {1}
  44:	Address 0x0000000000000044 is out of bounds.


Disassembly of section .debug_info:

00000000 <.debug_info>:
  tmp = RCC->CFGR & RCC_CFGR_SWS;
   0:	00000040 	andeq	r0, r0, r0, asr #32
   4:	04010005 	streq	r0, [r1], #-5
  switch (tmp)
   8:	00000000 	andeq	r0, r0, r0
   c:	00005301 	andeq	r5, r0, r1, lsl #6
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
  10:	00002100 	andeq	r2, r0, r0, lsl #2
  SystemCoreClock >>= tmp;  
  14:	010b0000 	mrseq	r0, (UNDEF: 11)
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
  18:	000c0000 	andeq	r0, ip, r0
	...
      pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
  24:	06020000 	streq	r0, [r2], -r0
      pllmull = ( pllmull >> 18U) + 2U;
  28:	01000001 	tsteq	r0, r1
  2c:	003c0501 	eorseq	r0, ip, r1, lsl #10
      if (pllsource == 0x00U)
  30:	01940000 	orrseq	r0, r4, r0
        if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
  34:	00040800 	andeq	r0, r4, r0, lsl #16
          SystemCoreClock = HSE_VALUE * pllmull;
  38:	9c010000 	stcls	0, cr0, [r1], {-0}
  3c:	69050403 	stmdbvs	r5, {r0, r1, sl}
          SystemCoreClock = (HSE_VALUE >> 1U) * pllmull;
  40:	0000746e 	andeq	r7, r0, lr, ror #8
  44:	00000222 	andeq	r0, r0, r2, lsr #4
  48:	04010005 	streq	r0, [r1], #-5
  4c:	00000038 	andeq	r0, r0, r8, lsr r0
  50:	0001a80b 	andeq	sl, r1, fp, lsl #16
  54:	030f1d00 	movweq	r1, #64768	; 0xfd00
  58:	010b0000 	mrseq	r0, (UNDEF: 11)
  5c:	001f0000 	andseq	r0, pc, r0
  60:	00000000 	andeq	r0, r0, r0
  64:	00890000 	addeq	r0, r9, r0
  68:	01010000 	mrseq	r0, (UNDEF: 1)
  6c:	00025006 	andeq	r5, r2, r6
  70:	018b0300 	orreq	r0, fp, r0, lsl #6
  74:	2b020000 	blcs	8007c <_Min_Stack_Size+0x7fc7c>
  78:	00003918 	andeq	r3, r0, r8, lsl r9
  7c:	08010100 	stmdaeq	r1, {r8}
  80:	0000024e 	andeq	r0, r0, lr, asr #4
  84:	f9050201 			; <UNDEFINED> instruction: 0xf9050201
  88:	01000002 	tsteq	r0, r2
  8c:	01950702 	orrseq	r0, r5, r2, lsl #14
  90:	04010000 	streq	r0, [r1], #-0
  94:	0002bc05 	andeq	fp, r2, r5, lsl #24
  98:	02790300 	rsbseq	r0, r9, #0, 6
  9c:	4f020000 	svcmi	0x00020000
  a0:	00006119 	andeq	r6, r0, r9, lsl r1
  a4:	07040100 	streq	r0, [r4, -r0, lsl #2]
  a8:	0000029a 	muleq	r0, sl, r2
  ac:	b7050801 	strlt	r0, [r5, -r1, lsl #16]
  b0:	01000002 	tsteq	r0, r2
  b4:	02950708 	addseq	r0, r5, #8, 14	; 0x200000
  b8:	040c0000 	streq	r0, [ip], #-0
  bc:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
  c0:	07040100 	streq	r0, [r4, -r0, lsl #2]
  c4:	0000029f 	muleq	r0, pc, r2	; <UNPREDICTABLE>
  c8:	00018d03 	andeq	r8, r1, r3, lsl #26
  cc:	13180300 	tstne	r8, #0, 6
  d0:	0000002d 	andeq	r0, r0, sp, lsr #32
  d4:	00008404 	andeq	r8, r0, r4, lsl #8
  d8:	027b0300 	rsbseq	r0, fp, #0, 6
  dc:	30030000 	andcc	r0, r3, r0
  e0:	00005514 	andeq	r5, r0, r4, lsl r5
  e4:	00950d00 	addseq	r0, r5, r0, lsl #26
  e8:	c5050000 	strgt	r0, [r5, #-0]
  ec:	33000002 	movwcc	r0, #2
  f0:	00009511 	andeq	r9, r0, r1, lsl r5
  f4:	00900800 	addseq	r0, r0, r0, lsl #16
  f8:	00c10000 	sbceq	r0, r1, r0
  fc:	7d090000 	stcvc	0, cr0, [r9, #-0]
 100:	0f000000 	svceq	0x00000000
 104:	00b10400 	adcseq	r0, r1, r0, lsl #8
 108:	5c050000 	stcpl	0, cr0, [r5], {-0}
 10c:	34000002 	strcc	r0, [r0], #-2
 110:	0000c117 	andeq	ip, r0, r7, lsl r1
 114:	00900800 	addseq	r0, r0, r0, lsl #16
 118:	00e10000 	rsceq	r0, r1, r0
 11c:	7d090000 	stcvc	0, cr0, [r9, #-0]
 120:	07000000 	streq	r0, [r0, -r0]
 124:	00d10400 	sbcseq	r0, r1, r0, lsl #8
 128:	eb050000 	bl	140130 <_Min_Stack_Size+0x13fd30>
 12c:	35000002 	strcc	r0, [r0, #-2]
 130:	0000e117 	andeq	lr, r0, r7, lsl r1
 134:	05280e00 	streq	r0, [r8, #-3584]!	; 0xfffff200
 138:	730901a8 	movwvc	r0, #37288	; 0x91a8
 13c:	06000001 	streq	r0, [r0], -r1
 140:	aa005243 	bge	14a54 <_Min_Stack_Size+0x14654>
 144:	0000a101 	andeq	sl, r0, r1, lsl #2
 148:	75020000 	strvc	r0, [r2, #-0]
 14c:	ab000001 	blge	158 <_Min_Heap_Size-0xa8>
 150:	0000a101 	andeq	sl, r0, r1, lsl #2
 154:	43060400 	movwmi	r0, #25600	; 0x6400
 158:	ac005249 	sfmge	f5, 4, [r0], {73}	; 0x49
 15c:	0000a101 	andeq	sl, r0, r1, lsl #2
 160:	8c020800 	stchi	8, cr0, [r2], {-0}
 164:	ad000002 	stcge	0, cr0, [r0, #-8]
 168:	0000a101 	andeq	sl, r0, r1, lsl #2
 16c:	70020c00 	andvc	r0, r2, r0, lsl #24
 170:	ae000002 	cdpge	0, 0, cr0, cr0, cr2, {0}
 174:	0000a101 	andeq	sl, r0, r1, lsl #2
 178:	7a021000 	bvc	84180 <_Min_Stack_Size+0x83d80>
 17c:	af000001 	svcge	0x00000001
 180:	0000a101 	andeq	sl, r0, r1, lsl #2
 184:	46021400 	strmi	r1, [r2], -r0, lsl #8
 188:	b0000002 	andlt	r0, r0, r2
 18c:	0000a101 	andeq	sl, r0, r1, lsl #2
 190:	84021800 	strhi	r1, [r2], #-2048	; 0xfffff800
 194:	b1000002 	tstlt	r0, r2
 198:	0000a101 	andeq	sl, r0, r1, lsl #2
 19c:	70021c00 	andvc	r1, r2, r0, lsl #24
 1a0:	b2000001 	andlt	r0, r0, #1
 1a4:	0000a101 	andeq	sl, r0, r1, lsl #2
 1a8:	43062000 	movwmi	r2, #24576	; 0x6000
 1ac:	b3005253 	movwlt	r5, #595	; 0x253
 1b0:	0000a101 	andeq	sl, r0, r1, lsl #2
 1b4:	0f002400 	svceq	0x00002400
 1b8:	00000303 	andeq	r0, r0, r3, lsl #6
 1bc:	0301b605 	movweq	fp, #5637	; 0x1605
 1c0:	000000f1 	strdeq	r0, [r0], -r1
 1c4:	39010710 	stmdbcc	r1, {r4, r8, r9, sl}
 1c8:	06000000 	streq	r0, [r0], -r0
 1cc:	019b0198 			; <UNDEFINED> instruction: 0x019b0198
 1d0:	6a110000 	bvs	4401d8 <_Min_Stack_Size+0x43fdd8>
 1d4:	00000002 	andeq	r0, r0, r2
 1d8:	54455312 	strbpl	r5, [r5], #-786	; 0xfffffcee
 1dc:	07000100 	streq	r0, [r0, -r0, lsl #2]
 1e0:	000000a6 	andeq	r0, r0, r6, lsr #1
 1e4:	03050a8e 	movweq	r0, #23182	; 0x5a8e
 1e8:	00000000 	andeq	r0, r0, r0
 1ec:	0000c607 	andeq	ip, r0, r7, lsl #12
 1f0:	050f8f00 	streq	r8, [pc, #-3840]	; fffff2f8 <BootRAM+0xef6fa99>
 1f4:	00000003 	andeq	r0, r0, r3
 1f8:	00e60700 	rsceq	r0, r6, r0, lsl #14
 1fc:	0f900000 	svceq	0x00900000
 200:	00000305 	andeq	r0, r0, r5, lsl #6
 204:	d5130000 	ldrle	r0, [r3, #-0]
 208:	01000002 	tsteq	r0, r2
 20c:	000006e1 	andeq	r0, r0, r1, ror #13
 210:	005c0000 	subseq	r0, ip, r0
 214:	9c010000 	stcls	0, cr0, [r1], {-0}
 218:	00000213 	andeq	r0, r0, r3, lsl r2
 21c:	706d7414 	rsbvc	r7, sp, r4, lsl r4
 220:	0ce30100 	stfeqe	f0, [r3]
 224:	00000095 	muleq	r0, r5, r0
 228:	00000016 	andeq	r0, r0, r6, lsl r0
 22c:	0000000c 	andeq	r0, r0, ip
 230:	0001680a 	andeq	r6, r1, sl, lsl #16
 234:	9516e300 	ldrls	lr, [r6, #-768]	; 0xfffffd00
 238:	55000000 	strpl	r0, [r0, #-0]
 23c:	4b000000 	blmi	244 <_Min_Heap_Size+0x44>
 240:	0a000000 	beq	248 <_Min_Heap_Size+0x48>
 244:	00000181 	andeq	r0, r0, r1, lsl #3
 248:	009524e3 	addseq	r2, r5, r3, ror #9
 24c:	00820000 	addeq	r0, r2, r0
 250:	007c0000 	rsbseq	r0, ip, r0
 254:	15000000 	strne	r0, [r0, #-0]
 258:	000002ac 	andeq	r0, r0, ip, lsr #5
 25c:	9806b001 	stmdals	r6, {r0, ip, sp, pc}
 260:	02080001 	andeq	r0, r8, #1
 264:	01000000 	mrseq	r0, (UNDEF: 0)
 268:	002a009c 	mlaeq	sl, ip, r0, r0
 26c:	00050000 	andeq	r0, r5, r0
 270:	017b0401 	cmneq	fp, r1, lsl #8
 274:	9b010000 	blls	4027c <_Min_Stack_Size+0x3fe7c>
 278:	38000002 	stmdacc	r0, {r1}
 27c:	6d000000 	stcvs	0, cr0, [r0, #-0]
 280:	0b000003 	bleq	294 <_Min_Heap_Size+0x94>
 284:	ce000001 	cdpgt	0, 0, cr0, cr0, cr1, {0}
 288:	01000003 	tsteq	r0, r3
 28c:	03da0280 	bicseq	r0, sl, #128, 4
 290:	019d0000 	orrseq	r0, sp, r0
 294:	00340800 	eorseq	r0, r4, r0, lsl #16
 298:	00000107 	andeq	r0, r0, r7, lsl #2
 29c:	04010005 	streq	r0, [r1], #-5
 2a0:	00000198 	muleq	r0, r8, r1
 2a4:	00043003 	andeq	r3, r4, r3
 2a8:	05441d00 	strbeq	r1, [r4, #-3328]	; 0xfffff300
 2ac:	04b60000 	ldrteq	r0, [r6], #0
 2b0:	00510000 	subseq	r0, r1, r0
 2b4:	00000000 	andeq	r0, r0, r0
 2b8:	03140000 	tsteq	r4, #0
 2bc:	01010000 	mrseq	r0, (UNDEF: 1)
 2c0:	00025006 	andeq	r5, r2, r6
 2c4:	08010100 	stmdaeq	r1, {r8}
 2c8:	0000024e 	andeq	r0, r0, lr, asr #4
 2cc:	f9050201 			; <UNDEFINED> instruction: 0xf9050201
 2d0:	01000002 	tsteq	r0, r2
 2d4:	01950702 	orrseq	r0, r5, r2, lsl #14
 2d8:	04010000 	streq	r0, [r1], #-0
 2dc:	0002bc05 	andeq	fp, r2, r5, lsl #24
 2e0:	07040100 	streq	r0, [r4, -r0, lsl #2]
 2e4:	0000029a 	muleq	r0, sl, r2
 2e8:	b7050801 	strlt	r0, [r5, -r1, lsl #16]
 2ec:	01000002 	tsteq	r0, r2
 2f0:	02950708 	addseq	r0, r5, #8, 14	; 0x200000
 2f4:	04040000 	streq	r0, [r4], #-0
 2f8:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
 2fc:	07040100 	streq	r0, [r4, -r0, lsl #2]
 300:	0000029f 	muleq	r0, pc, r2	; <UNPREDICTABLE>
 304:	0003fb05 	andeq	pc, r3, r5, lsl #22
 308:	17d10200 	ldrbne	r0, [r1, r0, lsl #4]
 30c:	00000065 	andeq	r0, r0, r5, rrx
 310:	13040801 	movwne	r0, #18433	; 0x4801
 314:	01000005 	tsteq	r0, r5
 318:	02570801 	subseq	r0, r7, #65536	; 0x10000
 31c:	91060000 	mrsls	r0, (UNDEF: 6)
 320:	91000000 	mrsls	r0, (UNDEF: 0)
 324:	07000000 	streq	r0, [r0, -r0]
 328:	97040800 	strls	r0, [r4, -r0, lsl #16]
 32c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
 330:	00041402 	andeq	r1, r4, r2, lsl #8
 334:	00861300 	addeq	r1, r6, r0, lsl #6
 338:	1f020000 	svcne	0x00020000
 33c:	14000005 	strne	r0, [r0], #-5
 340:	00000086 	andeq	r0, r0, r6, lsl #1
 344:	0003e802 	andeq	lr, r3, r2, lsl #16
 348:	00861500 	addeq	r1, r6, r0, lsl #10
 34c:	33020000 	movwcc	r0, #8192	; 0x2000
 350:	16000005 	strne	r0, [r0], -r5
 354:	00000086 	andeq	r0, r0, r6, lsl #1
 358:	0004b00a 	andeq	fp, r4, sl
 35c:	0d190100 	ldfeqs	f0, [r9, #-0]
 360:	0004020b 	andeq	r0, r4, fp, lsl #4
 364:	011e0100 	tsteq	lr, r0, lsl #2
 368:	080001e8 	stmdaeq	r0, {r3, r5, r6, r7, r8}
 36c:	00000048 	andeq	r0, r0, r8, asr #32
 370:	2a0c9c01 	bcs	32737c <_Min_Stack_Size+0x326f7c>
 374:	01000004 	tsteq	r0, r4
 378:	006c0a20 	rsbeq	r0, ip, r0, lsr #20
 37c:	00af0000 	adceq	r0, pc, r0
 380:	00ab0000 	adceq	r0, fp, r0
 384:	690d0000 	stmdbvs	sp, {}	; <UNPREDICTABLE>
 388:	0a210100 	beq	840790 <_Min_Stack_Size+0x840390>
 38c:	0000006c 	andeq	r0, r0, ip, rrx
 390:	000000c3 	andeq	r0, r0, r3, asr #1
 394:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
 398:	0001fc0e 	andeq	pc, r1, lr, lsl #24
 39c:	0000c008 	andeq	ip, r0, r8
 3a0:	Address 0x00000000000003a0 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
  tmp = RCC->CFGR & RCC_CFGR_SWS;
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
  switch (tmp)
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	10011117 	andne	r1, r1, r7, lsl r1
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
  10:	02000017 	andeq	r0, r0, #23
  SystemCoreClock >>= tmp;  
  14:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
  18:	0b3a0e03 	bleq	e8382c <_Min_Stack_Size+0xe8342c>
  SystemCoreClock >>= tmp;  
  1c:	0b390b3b 	bleq	e42d10 <_Min_Stack_Size+0xe42910>
}
  20:	01111349 	tsteq	r1, r9, asr #6
      pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
  24:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
      pllmull = ( pllmull >> 18U) + 2U;
  28:	0000197a 	andeq	r1, r0, sl, ror r9
  2c:	0b002403 	bleq	9040 <_Min_Stack_Size+0x8c40>
      if (pllsource == 0x00U)
  30:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
        if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
  34:	00000008 	andeq	r0, r0, r8
          SystemCoreClock = HSE_VALUE * pllmull;
  38:	0b002401 	bleq	9044 <_Min_Stack_Size+0x8c44>
  3c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
          SystemCoreClock = (HSE_VALUE >> 1U) * pllmull;
  40:	0200000e 	andeq	r0, r0, #14
  44:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
  48:	3b05213a 	blcc	148538 <_Min_Stack_Size+0x148138>
  4c:	11213905 			; <UNDEFINED> instruction: 0x11213905
  50:	0b381349 	bleq	e04d7c <_Min_Stack_Size+0xe0497c>
  54:	16030000 	strne	r0, [r3], -r0
  58:	3a0e0300 	bcc	380c60 <_Min_Stack_Size+0x380860>
  5c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  60:	0013490b 	andseq	r4, r3, fp, lsl #18
  64:	00260400 	eoreq	r0, r6, r0, lsl #8
  68:	00001349 	andeq	r1, r0, r9, asr #6
  6c:	03003405 	movweq	r3, #1029	; 0x405
  70:	04213a0e 	strteq	r3, [r1], #-2574	; 0xfffff5f2
  74:	0b390b3b 	bleq	e42d68 <_Min_Stack_Size+0xe42968>
  78:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
  7c:	0000193c 	andeq	r1, r0, ip, lsr r9
  80:	03000d06 	movweq	r0, #3334	; 0xd06
  84:	05213a08 	streq	r3, [r1, #-2568]!	; 0xfffff5f8
  88:	2139053b 	teqcs	r9, fp, lsr r5
  8c:	38134911 	ldmdacc	r3, {r0, r4, r8, fp, lr}
  90:	0700000b 	streq	r0, [r0, -fp]
  94:	13470034 	movtne	r0, #28724	; 0x7034
  98:	3b01213a 	blcc	48588 <_Min_Stack_Size+0x48188>
  9c:	020b390b 	andeq	r3, fp, #180224	; 0x2c000
  a0:	08000018 	stmdaeq	r0, {r3, r4}
  a4:	13490101 	movtne	r0, #37121	; 0x9101
  a8:	00001301 	andeq	r1, r0, r1, lsl #6
  ac:	49002109 	stmdbmi	r0, {r0, r3, r8, sp}
  b0:	000b2f13 	andeq	r2, fp, r3, lsl pc
  b4:	00340a00 	eorseq	r0, r4, r0, lsl #20
  b8:	213a0e03 	teqcs	sl, r3, lsl #28
  bc:	390b3b01 	stmdbcc	fp, {r0, r8, r9, fp, ip, sp}
  c0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
  c4:	1742b717 	smlaldne	fp, r2, r7, r7
  c8:	110b0000 	mrsne	r0, (UNDEF: 11)
  cc:	130e2501 	movwne	r2, #58625	; 0xe501
  d0:	1b0e030b 	blne	380d04 <_Min_Stack_Size+0x380904>
  d4:	1117550e 	tstne	r7, lr, lsl #10
  d8:	00171001 	andseq	r1, r7, r1
  dc:	00240c00 	eoreq	r0, r4, r0, lsl #24
  e0:	0b3e0b0b 	bleq	f82d14 <_Min_Stack_Size+0xf82914>
  e4:	00000803 	andeq	r0, r0, r3, lsl #16
  e8:	4900350d 	stmdbmi	r0, {r0, r2, r3, r8, sl, ip, sp}
  ec:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
  f0:	0b0b0113 	bleq	2c0544 <_Min_Stack_Size+0x2c0144>
  f4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
  f8:	13010b39 	movwne	r0, #6969	; 0x1b39
  fc:	160f0000 	strne	r0, [pc], -r0
 100:	3a0e0300 	bcc	380d08 <_Min_Stack_Size+0x380908>
 104:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 108:	0013490b 	andseq	r4, r3, fp, lsl #18
 10c:	01041000 	mrseq	r1, (UNDEF: 4)
 110:	0b0b0b3e 	bleq	2c2e10 <_Min_Stack_Size+0x2c2a10>
 114:	0b3a1349 	bleq	e84e40 <_Min_Stack_Size+0xe84a40>
 118:	0b390b3b 	bleq	e42e0c <_Min_Stack_Size+0xe42a0c>
 11c:	00001301 	andeq	r1, r0, r1, lsl #6
 120:	03002811 	movweq	r2, #2065	; 0x811
 124:	000b1c0e 	andeq	r1, fp, lr, lsl #24
 128:	00281200 	eoreq	r1, r8, r0, lsl #4
 12c:	0b1c0803 	bleq	702140 <_Min_Stack_Size+0x701d40>
 130:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
 134:	03193f01 	tsteq	r9, #1, 30
 138:	3b0b3a0e 	blcc	2ce978 <_Min_Stack_Size+0x2ce578>
 13c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 140:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 144:	7a184006 	bvc	610164 <_Min_Stack_Size+0x60fd64>
 148:	00130119 	andseq	r0, r3, r9, lsl r1
 14c:	00341400 	eorseq	r1, r4, r0, lsl #8
 150:	0b3a0803 	bleq	e82164 <_Min_Stack_Size+0xe81d64>
 154:	0b390b3b 	bleq	e42e48 <_Min_Stack_Size+0xe42a48>
 158:	17021349 	strne	r1, [r2, -r9, asr #6]
 15c:	001742b7 			; <UNDEFINED> instruction: 0x001742b7
 160:	002e1500 	eoreq	r1, lr, r0, lsl #10
 164:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 168:	0b3b0b3a 	bleq	ec2e58 <_Min_Stack_Size+0xec2a58>
 16c:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
 170:	06120111 			; <UNDEFINED> instruction: 0x06120111
 174:	197a1840 	ldmdbne	sl!, {r6, fp, ip}^
 178:	01000000 	mrseq	r0, (UNDEF: 0)
 17c:	17100111 			; <UNDEFINED> instruction: 0x17100111
 180:	0e031755 	mcreq	7, 0, r1, cr3, cr5, {2}
 184:	0e250e1b 	mcreq	14, 1, r0, cr5, cr11, {0}
 188:	00000513 	andeq	r0, r0, r3, lsl r5
 18c:	03002e02 	movweq	r2, #3586	; 0xe02
 190:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
 194:	0000000f 	andeq	r0, r0, pc
 198:	0b002401 	bleq	91a4 <_Min_Stack_Size+0x8da4>
 19c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 1a0:	0200000e 	andeq	r0, r0, #14
 1a4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 1a8:	3b01213a 	blcc	48698 <_Min_Stack_Size+0x48298>
 1ac:	0f21390b 	svceq	0x0021390b
 1b0:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
 1b4:	0000193c 	andeq	r1, r0, ip, lsr r9
 1b8:	25011103 	strcs	r1, [r1, #-259]	; 0xfffffefd
 1bc:	030b130e 	movweq	r1, #45838	; 0xb30e
 1c0:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
 1c4:	10011117 	andne	r1, r1, r7, lsl r1
 1c8:	04000017 	streq	r0, [r0], #-23	; 0xffffffe9
 1cc:	0b0b0024 	bleq	2c0264 <_Min_Stack_Size+0x2bfe64>
 1d0:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
 1d4:	16050000 	strne	r0, [r5], -r0
 1d8:	3a0e0300 	bcc	380de0 <_Min_Stack_Size+0x3809e0>
 1dc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 1e0:	0013490b 	andseq	r4, r3, fp, lsl #18
 1e4:	01010600 	tsteq	r1, r0, lsl #12
 1e8:	13011349 	movwne	r1, #4937	; 0x1349
 1ec:	21070000 	mrscs	r0, (UNDEF: 7)
 1f0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
 1f4:	0b0b000f 	bleq	2c0238 <_Min_Stack_Size+0x2bfe38>
 1f8:	00001349 	andeq	r1, r0, r9, asr #6
 1fc:	27001509 	strcs	r1, [r0, -r9, lsl #10]
 200:	0a000019 	beq	26c <_Min_Heap_Size+0x6c>
 204:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 208:	0b3a0e03 	bleq	e83a1c <_Min_Stack_Size+0xe8361c>
 20c:	0b390b3b 	bleq	e42f00 <_Min_Stack_Size+0xe42b00>
 210:	193c1927 	ldmdbne	ip!, {r0, r1, r2, r5, r8, fp, ip}
 214:	2e0b0000 	cdpcs	0, 0, cr0, cr11, cr0, {0}
 218:	03193f01 	tsteq	r9, #1, 30
 21c:	3b0b3a0e 	blcc	2cea5c <_Min_Stack_Size+0x2ce65c>
 220:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 224:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 228:	7c184006 	ldcvc	0, cr4, [r8], {6}
 22c:	0c000019 	stceq	0, cr0, [r0], {25}
 230:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 234:	0b3b0b3a 	bleq	ec2f24 <_Min_Stack_Size+0xec2b24>
 238:	13490b39 	movtne	r0, #39737	; 0x9b39
 23c:	42b71702 	adcsmi	r1, r7, #524288	; 0x80000
 240:	0d000017 	stceq	0, cr0, [r0, #-92]	; 0xffffffa4
 244:	08030034 	stmdaeq	r3, {r2, r4, r5}
 248:	0b3b0b3a 	bleq	ec2f38 <_Min_Stack_Size+0xec2b38>
 24c:	13490b39 	movtne	r0, #39737	; 0x9b39
 250:	42b71702 	adcsmi	r1, r7, #524288	; 0x80000
 254:	0e000017 	mcreq	0, 0, r0, cr0, cr7, {0}
 258:	017d0048 	cmneq	sp, r8, asr #32
 25c:	0000137f 	andeq	r1, r0, pc, ror r3
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
  tmp = RCC->CFGR & RCC_CFGR_SWS;
   0:	0000001c 	andeq	r0, r0, ip, lsl r0
   4:	00000002 	andeq	r0, r0, r2
  switch (tmp)
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
  10:	08000194 	stmdaeq	r0, {r2, r4, r7, r8}
  SystemCoreClock >>= tmp;  
  14:	00000004 	andeq	r0, r0, r4
	...
}
  20:	00000024 	andeq	r0, r0, r4, lsr #32
      pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
  24:	00440002 	subeq	r0, r4, r2
      pllmull = ( pllmull >> 18U) + 2U;
  28:	00040000 	andeq	r0, r4, r0
  2c:	00000000 	andeq	r0, r0, r0
      if (pllsource == 0x00U)
  30:	08000198 	stmdaeq	r0, {r3, r4, r7, r8}
        if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
  34:	00000002 	andeq	r0, r0, r2
          SystemCoreClock = HSE_VALUE * pllmull;
  38:	00000000 	andeq	r0, r0, r0
  3c:	0000005c 	andeq	r0, r0, ip, asr r0
	...
          SystemCoreClock = (HSE_VALUE >> 1U) * pllmull;
  48:	00000024 	andeq	r0, r0, r4, lsr #32
  4c:	026a0002 	rsbeq	r0, sl, #2
  50:	00040000 	andeq	r0, r4, r0
  54:	00000000 	andeq	r0, r0, r0
  58:	0800019c 	stmdaeq	r0, {r2, r3, r4, r7, r8}
  5c:	00000048 	andeq	r0, r0, r8, asr #32
  60:	080001e4 	stmdaeq	r0, {r2, r5, r6, r7, r8}
  64:	00000002 	andeq	r0, r0, r2
	...
  70:	0000001c 	andeq	r0, r0, ip, lsl r0
  74:	02980002 	addseq	r0, r8, #2
  78:	00040000 	andeq	r0, r4, r0
  7c:	00000000 	andeq	r0, r0, r0
  80:	080001e8 	stmdaeq	r0, {r3, r5, r6, r7, r8}
  84:	00000048 	andeq	r0, r0, r8, asr #32
	...

Disassembly of section .debug_rnglists:

00000000 <.debug_rnglists>:
  tmp = RCC->CFGR & RCC_CFGR_SWS;
   0:	0000000f 	andeq	r0, r0, pc
   4:	00040005 	andeq	r0, r4, r5
  switch (tmp)
   8:	00000000 	andeq	r0, r0, r0
   c:	00019407 	andeq	r9, r1, r7, lsl #8
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
  10:	15000408 	strne	r0, [r0, #-1032]	; 0xfffffbf8
  SystemCoreClock >>= tmp;  
  14:	05000000 	streq	r0, [r0, #-0]
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
  18:	00000400 	andeq	r0, r0, r0, lsl #8
  SystemCoreClock >>= tmp;  
  1c:	07000000 	streq	r0, [r0, -r0]
}
  20:	08000198 	stmdaeq	r0, {r3, r4, r7, r8}
      pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
  24:	00000702 	andeq	r0, r0, r2, lsl #14
      pllmull = ( pllmull >> 18U) + 2U;
  28:	005c0000 	subseq	r0, ip, r0
  2c:	00000015 	andeq	r0, r0, r5, lsl r0
      if (pllsource == 0x00U)
  30:	00040005 	andeq	r0, r4, r5
        if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
  34:	00000000 	andeq	r0, r0, r0
          SystemCoreClock = HSE_VALUE * pllmull;
  38:	00019c07 	andeq	r9, r1, r7, lsl #24
  3c:	e4074808 	str	r4, [r7], #-2056	; 0xfffff7f8
          SystemCoreClock = (HSE_VALUE >> 1U) * pllmull;
  40:	02080001 	andeq	r0, r8, #1
  44:	00000f00 	andeq	r0, r0, r0, lsl #30
  48:	04000500 	streq	r0, [r0], #-1280	; 0xfffffb00
  4c:	00000000 	andeq	r0, r0, r0
  50:	01e80700 	mvneq	r0, r0, lsl #14
  54:	00480800 	subeq	r0, r8, r0, lsl #16

Disassembly of section .debug_line:

00000000 <.debug_line>:
  tmp = RCC->CFGR & RCC_CFGR_SWS;
   0:	00000085 	andeq	r0, r0, r5, lsl #1
   4:	00690003 	rsbeq	r0, r9, r3
  switch (tmp)
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
  10:	01010101 	tsteq	r1, r1, lsl #2
  SystemCoreClock >>= tmp;  
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
  18:	2f010000 	svccs	0x00010000
  SystemCoreClock >>= tmp;  
  1c:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
}
  20:	7265532f 	rsbvc	r5, r5, #-1140850688	; 0xbc000000
      pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
  24:	736e6570 	cmnvc	lr, #112, 10	; 0x1c000000
      pllmull = ( pllmull >> 18U) + 2U;
  28:	6f72502f 	svcvs	0x0072502f
  2c:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
      if (pllsource == 0x00U)
  30:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
        if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
  34:	7065522f 	rsbvc	r5, r5, pc, lsr #4
          SystemCoreClock = HSE_VALUE * pllmull;
  38:	7469736f 	strbtvc	r7, [r9], #-879	; 0xfffffc91
  3c:	2f79726f 	svccs	0x0079726f
          SystemCoreClock = (HSE_VALUE >> 1U) * pllmull;
  40:	706d6953 	rsbvc	r6, sp, r3, asr r9
  44:	654d656c 	strbvs	r6, [sp, #-1388]	; 0xfffffa94
  48:	536f6574 	cmnpl	pc, #116, 10	; 0x1d000000
  4c:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
  50:	742f6e6f 	strtvc	r6, [pc], #-3695	; 58 <_Min_Heap_Size-0x1a8>
  54:	65677261 	strbvs	r7, [r7, #-609]!	; 0xfffffd9f
  58:	732f7374 			; <UNDEFINED> instruction: 0x732f7374
  5c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
  60:	33303166 	teqcc	r0, #-2147483623	; 0x80000019
  64:	616d0000 	cmnvs	sp, r0
  68:	632e6e69 			; <UNDEFINED> instruction: 0x632e6e69
  6c:	01007070 	tsteq	r0, r0, ror r0
  70:	05000000 	streq	r0, [r0, #-0]
  74:	02050001 	andeq	r0, r5, #1
  78:	08000194 	stmdaeq	r0, {r2, r4, r7, r8}
  7c:	13020513 	movwne	r0, #9491	; 0x2513
  80:	13060105 	movwne	r0, #24837	; 0x6105
  84:	01000202 	tsteq	r0, r2, lsl #4
  88:	00020e01 	andeq	r0, r2, r1, lsl #28
  8c:	61000300 	mrsvs	r0, LR_irq
  90:	02000001 	andeq	r0, r0, #1
  94:	0d0efb01 	vstreq	d15, [lr, #-4]
  98:	01010100 	mrseq	r0, (UNDEF: 17)
  9c:	00000001 	andeq	r0, r0, r1
  a0:	01000001 	tsteq	r0, r1
  a4:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; fffffff0 <BootRAM+0xef70791>
  a8:	65532f65 	ldrbvs	r2, [r3, #-3941]	; 0xfffff09b
  ac:	6e657072 	mcrvs	0, 3, r7, cr5, cr2, {3}
  b0:	72502f73 	subsvc	r2, r0, #460	; 0x1cc
  b4:	6172676f 	cmnvs	r2, pc, ror #14
  b8:	6e696d6d 	cdpvs	13, 6, cr6, cr9, cr13, {3}
  bc:	65522f67 	ldrbvs	r2, [r2, #-3943]	; 0xfffff099
  c0:	69736f70 	ldmdbvs	r3!, {r4, r5, r6, r8, r9, sl, fp, sp, lr}^
  c4:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
  c8:	6d69532f 	stclvs	3, cr5, [r9, #-188]!	; 0xffffff44
  cc:	4d656c70 	stclmi	12, cr6, [r5, #-448]!	; 0xfffffe40
  d0:	6f657465 	svcvs	0x00657465
  d4:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
  d8:	2f6e6f69 	svccs	0x006e6f69
  dc:	2d747865 	ldclcs	8, cr7, [r4, #-404]!	; 0xfffffe6c
  e0:	7362696c 	cmnvc	r2, #108, 18	; 0x1b0000
  e4:	736d632f 	cmnvc	sp, #-1140850688	; 0xbc000000
  e8:	732f7369 			; <UNDEFINED> instruction: 0x732f7369
  ec:	2f006d74 	svccs	0x00006d74
  f0:	2f727375 	svccs	0x00727375
  f4:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
  f8:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
  fc:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
 100:	6e692f69 	cdpvs	15, 6, cr2, cr9, cr9, {3}
 104:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
 108:	616d2f65 	cmnvs	sp, r5, ror #30
 10c:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
 110:	752f0065 	strvc	r0, [pc, #-101]!	; b3 <_Min_Heap_Size-0x14d>
 114:	612f7273 			; <UNDEFINED> instruction: 0x612f7273
 118:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
 11c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
 120:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
 124:	636e692f 	cmnvs	lr, #770048	; 0xbc000
 128:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
 12c:	7379732f 	cmnvc	r9, #-1140850688	; 0xbc000000
 130:	6f682f00 	svcvs	0x00682f00
 134:	532f656d 			; <UNDEFINED> instruction: 0x532f656d
 138:	65707265 	ldrbvs	r7, [r0, #-613]!	; 0xfffffd9b
 13c:	502f736e 	eorpl	r7, pc, lr, ror #6
 140:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
 144:	696d6d61 	stmdbvs	sp!, {r0, r5, r6, r8, sl, fp, sp, lr}^
 148:	522f676e 	eorpl	r6, pc, #28835840	; 0x1b80000
 14c:	736f7065 	cmnvc	pc, #101	; 0x65
 150:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
 154:	69532f79 	ldmdbvs	r3, {r0, r3, r4, r5, r6, r8, r9, sl, fp, sp}^
 158:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
 15c:	6574654d 	ldrbvs	r6, [r4, #-1357]!	; 0xfffffab3
 160:	6174536f 	cmnvs	r4, pc, ror #6
 164:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 168:	7478652f 	ldrbtvc	r6, [r8], #-1327	; 0xfffffad1
 16c:	62696c2d 	rsbvs	r6, r9, #11520	; 0x2d00
 170:	6d632f73 	stclvs	15, cr2, [r3, #-460]!	; 0xfffffe34
 174:	2f736973 	svccs	0x00736973
 178:	2f6d7473 	svccs	0x006d7473
 17c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
 180:	73656475 	cmnvc	r5, #1962934272	; 0x75000000
 184:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
 188:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
 18c:	6d74735f 	ldclvs	3, cr7, [r4, #-380]!	; 0xfffffe84
 190:	31663233 	cmncc	r6, r3, lsr r2
 194:	632e7878 			; <UNDEFINED> instruction: 0x632e7878
 198:	00000100 	andeq	r0, r0, r0, lsl #2
 19c:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
 1a0:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
 1a4:	7079745f 	rsbsvc	r7, r9, pc, asr r4
 1a8:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
 1ac:	00000200 	andeq	r0, r0, r0, lsl #4
 1b0:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
 1b4:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
 1b8:	00030068 	andeq	r0, r3, r8, rrx
 1bc:	73797300 	cmnvc	r9, #0, 6
 1c0:	5f6d6574 	svcpl	0x006d6574
 1c4:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 1c8:	78316632 	ldmdavc	r1!, {r1, r4, r5, r9, sl, sp, lr}
 1cc:	00682e78 	rsbeq	r2, r8, r8, ror lr
 1d0:	73000004 	movwvc	r0, #4
 1d4:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
 1d8:	33303166 	teqcc	r0, #-2147483623	; 0x80000019
 1dc:	682e6278 	stmdavs	lr!, {r3, r4, r5, r6, r9, sp, lr}
 1e0:	00000400 	andeq	r0, r0, r0, lsl #8
 1e4:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 1e8:	78316632 	ldmdavc	r1!, {r1, r4, r5, r9, sl, sp, lr}
 1ec:	00682e78 	rsbeq	r2, r8, r8, ror lr
 1f0:	00000004 	andeq	r0, r0, r4
 1f4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
 1f8:	00019802 	andeq	r9, r1, r2, lsl #16
 1fc:	01b00308 	lslseq	r0, r8, #6
 200:	010b0301 	tsteq	fp, r1, lsl #6
 204:	01000102 	tsteq	r0, r2, lsl #2
 208:	00010501 	andeq	r0, r1, r1, lsl #10
 20c:	00000205 	andeq	r0, r0, r5, lsl #4
 210:	e1030000 	mrs	r0, (UNDEF: 3)
 214:	03050101 	movweq	r0, #20737	; 0x5101
 218:	010b0313 	tsteq	fp, r3, lsl r3
 21c:	01060c05 	tsteq	r6, r5, lsl #24
 220:	30060305 	andcc	r0, r6, r5, lsl #6
 224:	10060705 	andne	r0, r6, r5, lsl #14
 228:	06300305 	ldrteq	r0, [r0], -r5, lsl #6
 22c:	3c00d803 	stccc	8, cr13, [r0], {3}
 230:	01061c05 	tsteq	r6, r5, lsl #24
 234:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
 238:	0305201c 	movweq	r2, #20508	; 0x501c
 23c:	13052206 	movwne	r2, #20998	; 0x5206
 240:	34050106 	strcc	r0, [r5], #-262	; 0xfffffefa
 244:	2e07051e 	mcrcs	5, 0, r0, cr7, cr14, {0}
 248:	05221305 	streq	r1, [r2, #-773]!	; 0xfffffcfb
 24c:	07052f01 	streq	r2, [r5, -r1, lsl #30]
 250:	7fb00306 	svcvc	0x00b00306
 254:	06140520 	ldreq	r0, [r4], -r0, lsr #10
 258:	06070501 	streq	r0, [r7], -r1, lsl #10
 25c:	06160521 	ldreq	r0, [r6], -r1, lsr #10
 260:	06070501 	streq	r0, [r7], -r1, lsl #10
 264:	061b0523 	ldreq	r0, [fp], -r3, lsr #10
 268:	300a0501 	andcc	r0, sl, r1, lsl #10
 26c:	051e0f05 	ldreq	r0, [lr, #-3845]	; 0xfffff0fb
 270:	05300607 	ldreq	r0, [r0, #-1543]!	; 0xfffff9f9
 274:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
 278:	0d030609 	stceq	6, cr0, [r3, #-36]	; 0xffffffdc
 27c:	06110520 	ldreq	r0, [r1], -r0, lsr #10
 280:	200c0501 	andcs	r0, ip, r1, lsl #10
 284:	34060b05 	strcc	r0, [r6], #-2821	; 0xfffff4fb
 288:	01062705 	tsteq	r6, r5, lsl #14
 28c:	060b053c 			; <UNDEFINED> instruction: 0x060b053c
 290:	062f051c 			; <UNDEFINED> instruction: 0x062f051c
 294:	0b023c01 	bleq	8f2a0 <_Min_Stack_Size+0x8eea0>
 298:	75010100 	strvc	r0, [r1, #-256]	; 0xffffff00
 29c:	05000000 	streq	r0, [r0, #-0]
 2a0:	2e000400 	cfcpyscs	mvf0, mvf0
 2a4:	02000000 	andeq	r0, r0, #0
 2a8:	0efb0101 	cdpeq	1, 15, cr0, cr11, cr1, {0}
 2ac:	0101000d 	tsteq	r1, sp
 2b0:	00000101 	andeq	r0, r0, r1, lsl #2
 2b4:	00000100 	andeq	r0, r0, r0, lsl #2
 2b8:	1f010101 	svcne	0x00010101
 2bc:	00000002 	andeq	r0, r0, r2
 2c0:	00005d00 	andeq	r5, r0, r0, lsl #26
 2c4:	1f010200 	svcne	0x00010200
 2c8:	a8020f02 	stmdage	r2, {r1, r8, r9, sl, fp}
 2cc:	01000000 	mrseq	r0, (UNDEF: 0)
 2d0:	000000a8 	andeq	r0, r0, r8, lsr #1
 2d4:	02050001 	andeq	r0, r5, #1
 2d8:	0800019c 	stmdaeq	r0, {r2, r3, r4, r7, r8}
 2dc:	0100c003 	tsteq	r0, r3
 2e0:	21212121 			; <UNDEFINED> instruction: 0x21212121
 2e4:	23212123 			; <UNDEFINED> instruction: 0x23212123
 2e8:	21232121 			; <UNDEFINED> instruction: 0x21232121
 2ec:	21232121 			; <UNDEFINED> instruction: 0x21232121
 2f0:	30232123 	eorcc	r2, r3, r3, lsr #2
 2f4:	5c032f30 	stcpl	15, cr2, [r3], {48}	; 0x30
 2f8:	032f2f20 			; <UNDEFINED> instruction: 0x032f2f20
 2fc:	022f2e0f 	eoreq	r2, pc, #15, 28	; 0xf0
 300:	01010002 	tsteq	r1, r2
 304:	e4020500 	str	r0, [r2], #-1280	; 0xfffffb00
 308:	03080001 	movweq	r0, #32769	; 0x8001
 30c:	020100f2 	andeq	r0, r1, #242	; 0xf2
 310:	01010001 	tsteq	r1, r1
 314:	00000116 	andeq	r0, r0, r6, lsl r1
 318:	007c0003 	rsbseq	r0, ip, r3
 31c:	01020000 	mrseq	r0, (UNDEF: 2)
 320:	000d0efb 	strdeq	r0, [sp], -fp
 324:	01010101 	tsteq	r1, r1, lsl #2
 328:	01000000 	mrseq	r0, (UNDEF: 0)
 32c:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
 330:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
 334:	2f2e2e2f 	svccs	0x002e2e2f
 338:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
 33c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
 340:	2f2e2e2f 	svccs	0x002e2e2f
 344:	6e2f2e2e 	cdpvs	14, 2, cr2, cr15, cr14, {1}
 348:	696c7765 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
 34c:	696c2f62 	stmdbvs	ip!, {r1, r5, r6, r8, r9, sl, fp, sp}^
 350:	6d2f6362 	stcvs	3, cr6, [pc, #-392]!	; 1d0 <_Min_Heap_Size-0x30>
 354:	00637369 	rsbeq	r7, r3, r9, ror #6
 358:	7273752f 	rsbsvc	r7, r3, #197132288	; 0xbc00000
 35c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
 360:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
 364:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
 368:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
 36c:	61652d65 	cmnvs	r5, r5, ror #26
 370:	312f6962 			; <UNDEFINED> instruction: 0x312f6962
 374:	2e312e31 	mrccs	14, 1, r2, cr1, cr1, {1}
 378:	6e692f30 	mcrvs	15, 3, r2, cr9, cr0, {1}
 37c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
 380:	69000065 	stmdbvs	r0, {r0, r2, r5, r6}
 384:	2e74696e 	vsubcs.f16	s13, s8, s29	; <UNPREDICTABLE>
 388:	00010063 	andeq	r0, r1, r3, rrx
 38c:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
 390:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
 394:	00020068 	andeq	r0, r2, r8, rrx
 398:	01050000 	mrseq	r0, (UNDEF: 5)
 39c:	e8020500 	stmda	r2, {r8, sl}
 3a0:	03080001 	movweq	r0, #32769	; 0x8001
 3a4:	0305011e 	movweq	r0, #20766	; 0x511e
 3a8:	05141313 	ldreq	r1, [r4, #-787]	; 0xfffffced
 3ac:	050e0601 	streq	r0, [lr, #-1537]	; 0xfffff9ff
 3b0:	1f05250a 	svcne	0x0005250a
 3b4:	0603051f 			; <UNDEFINED> instruction: 0x0603051f
 3b8:	0011054b 	andseq	r0, r1, fp, asr #10
 3bc:	01010402 	tsteq	r1, r2, lsl #8
 3c0:	31320305 	teqcc	r2, r5, lsl #6
 3c4:	13060a05 	movwne	r0, #27141	; 0x6a05
 3c8:	2e1f1c05 	cdpcs	12, 1, cr1, cr15, cr5, {0}
 3cc:	2f060305 	svccs	0x00060305
 3d0:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
 3d4:	05010104 	streq	r0, [r1, #-260]	; 0xfffffefc
 3d8:	05300601 	ldreq	r0, [r0, #-1537]!	; 0xfffff9ff
 3dc:	04020005 	streq	r0, [r2], #-5
 3e0:	77030603 	strvc	r0, [r3, -r3, lsl #12]
 3e4:	001a0520 	andseq	r0, sl, r0, lsr #10
 3e8:	06030402 	streq	r0, [r3], -r2, lsl #8
 3ec:	00050501 	andeq	r0, r5, r1, lsl #10
 3f0:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
 3f4:	02001b05 	andeq	r1, r0, #5120	; 0x1400
 3f8:	1f060304 	svcne	0x00060304
 3fc:	03040200 	movweq	r0, #16896	; 0x4200
 400:	05052006 	streq	r2, [r5, #-6]
 404:	03040200 	movweq	r0, #16896	; 0x4200
 408:	20090306 	andcs	r0, r9, r6, lsl #6
 40c:	02001705 	andeq	r1, r0, #1310720	; 0x140000
 410:	01060304 	tsteq	r6, r4, lsl #6
 414:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
 418:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
 41c:	0402001b 	streq	r0, [r2], #-27	; 0xffffffe5
 420:	001f0603 	andseq	r0, pc, r3, lsl #12
 424:	06030402 	streq	r0, [r3], -r2, lsl #8
 428:	00090220 	andeq	r0, r9, r0, lsr #4
 42c:	Address 0x000000000000042c is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
  tmp = RCC->CFGR & RCC_CFGR_SWS;
   0:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; ffffff4c <BootRAM+0xef706ed>
   4:	65532f65 	ldrbvs	r2, [r3, #-3941]	; 0xfffff09b
  switch (tmp)
   8:	6e657072 	mcrvs	0, 3, r7, cr5, cr2, {3}
   c:	72502f73 	subsvc	r2, r0, #460	; 0x1cc
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
  10:	6172676f 	cmnvs	r2, pc, ror #14
  SystemCoreClock >>= tmp;  
  14:	6e696d6d 	cdpvs	13, 6, cr6, cr9, cr13, {3}
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
  18:	65522f67 	ldrbvs	r2, [r2, #-3943]	; 0xfffff099
  SystemCoreClock >>= tmp;  
  1c:	69736f70 	ldmdbvs	r3!, {r4, r5, r6, r8, r9, sl, fp, sp, lr}^
}
  20:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
      pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
  24:	6d69532f 	stclvs	3, cr5, [r9, #-188]!	; 0xffffff44
      pllmull = ( pllmull >> 18U) + 2U;
  28:	4d656c70 	stclmi	12, cr6, [r5, #-448]!	; 0xfffffe40
  2c:	6f657465 	svcvs	0x00657465
      if (pllsource == 0x00U)
  30:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
        if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
  34:	2f6e6f69 	svccs	0x006e6f69
          SystemCoreClock = HSE_VALUE * pllmull;
  38:	67726174 			; <UNDEFINED> instruction: 0x67726174
  3c:	2f737465 	svccs	0x00737465
          SystemCoreClock = (HSE_VALUE >> 1U) * pllmull;
  40:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
  44:	30316632 	eorscc	r6, r1, r2, lsr r6
  48:	616d2f33 	cmnvs	sp, r3, lsr pc
  4c:	632e6e69 			; <UNDEFINED> instruction: 0x632e6e69
  50:	47007070 	smlsdxmi	r0, r0, r0, r7
  54:	4320554e 			; <UNDEFINED> instruction: 0x4320554e
  58:	37312b2b 	ldrcc	r2, [r1, -fp, lsr #22]!
  5c:	2e323120 	rsfcssp	f3, f2, f0
  60:	20302e32 	eorscs	r2, r0, r2, lsr lr
  64:	70636d2d 	rsbvc	r6, r3, sp, lsr #26
  68:	6f633d75 	svcvs	0x00633d75
  6c:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
  70:	20336d2d 	eorscs	r6, r3, sp, lsr #26
  74:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
  78:	20626d75 	rsbcs	r6, r2, r5, ror sp
  7c:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
  80:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
  84:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
  88:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
  8c:	616d2d20 	cmnvs	sp, r0, lsr #26
  90:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
  94:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
  98:	206d2d37 	rsbcs	r2, sp, r7, lsr sp
  9c:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
  a0:	4f2d2067 	svcmi	0x002d2067
  a4:	732d2032 			; <UNDEFINED> instruction: 0x732d2032
  a8:	673d6474 			; <UNDEFINED> instruction: 0x673d6474
  ac:	2b2b756e 	blcs	add66c <_Min_Stack_Size+0xadd26c>
  b0:	2d203731 	stccs	7, cr3, [r0, #-196]!	; 0xffffff3c
  b4:	61747366 	cmnvs	r4, r6, ror #6
  b8:	752d6b63 	strvc	r6, [sp, #-2915]!	; 0xfffff49d
  bc:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
  c0:	66662d20 	strbtvs	r2, [r6], -r0, lsr #26
  c4:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
  c8:	2d6e6f69 	stclcs	15, cr6, [lr, #-420]!	; 0xfffffe5c
  cc:	74636573 	strbtvc	r6, [r3], #-1395	; 0xfffffa8d
  d0:	736e6f69 	cmnvc	lr, #420	; 0x1a4
  d4:	64662d20 	strbtvs	r2, [r6], #-3360	; 0xfffff2e0
  d8:	2d617461 	cfstrdcs	mvd7, [r1, #-388]!	; 0xfffffe7c
  dc:	74636573 	strbtvc	r6, [r3], #-1395	; 0xfffffa8d
  e0:	736e6f69 	cmnvc	lr, #420	; 0x1a4
  e4:	6e662d20 	cdpvs	13, 6, cr2, cr6, cr0, {1}
  e8:	78652d6f 	stmdavc	r5!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp}^
  ec:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
  f0:	736e6f69 	cmnvc	lr, #420	; 0x1a4
  f4:	75662d20 	strbvc	r2, [r6, #-3360]!	; 0xfffff2e0
  f8:	632d6573 			; <UNDEFINED> instruction: 0x632d6573
  fc:	612d6178 			; <UNDEFINED> instruction: 0x612d6178
 100:	69786574 	ldmdbvs	r8!, {r2, r4, r5, r6, r8, sl, sp, lr}^
 104:	616d0074 	smcvs	53252	; 0xd004
 108:	2f006e69 	svccs	0x00006e69
 10c:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
 110:	7265532f 	rsbvc	r5, r5, #-1140850688	; 0xbc000000
 114:	736e6570 	cmnvc	lr, #112, 10	; 0x1c000000
 118:	6f72502f 	svcvs	0x0072502f
 11c:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
 120:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
 124:	7065522f 	rsbvc	r5, r5, pc, lsr #4
 128:	7469736f 	strbtvc	r7, [r9], #-879	; 0xfffffc91
 12c:	2f79726f 	svccs	0x0079726f
 130:	706d6953 	rsbvc	r6, sp, r3, asr r9
 134:	654d656c 	strbvs	r6, [sp, #-1388]	; 0xfffffa94
 138:	536f6574 	cmnpl	pc, #116, 10	; 0x1d000000
 13c:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
 140:	2e2f6e6f 	cdpcs	14, 2, cr6, cr15, cr15, {3}
 144:	6b616d63 	blvs	185b6d8 <_Min_Stack_Size+0x185b2d8>
 148:	74732f65 	ldrbtvc	r2, [r3], #-3941	; 0xfffff09b
 14c:	2f32336d 	svccs	0x0032336d
 150:	75626564 	strbvc	r6, [r2, #-1380]!	; 0xfffffa9c
 154:	61742f67 	cmnvs	r4, r7, ror #30
 158:	74656772 	strbtvc	r6, [r5], #-1906	; 0xfffff88e
 15c:	74732f73 	ldrbtvc	r2, [r3], #-3955	; 0xfffff08d
 160:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
 164:	00333031 	eorseq	r3, r3, r1, lsr r0
 168:	6d6c6c70 	stclvs	12, cr6, [ip, #-448]!	; 0xfffffe40
 16c:	006c6c75 	rsbeq	r6, ip, r5, ror ip
 170:	52434442 	subpl	r4, r3, #1107296256	; 0x42000000
 174:	47464300 	strbmi	r4, [r6, -r0, lsl #6]
 178:	48410052 	stmdami	r1, {r1, r4, r6}^
 17c:	524e4542 	subpl	r4, lr, #276824064	; 0x10800000
 180:	6c6c7000 	stclvs	0, cr7, [ip], #-0
 184:	72756f73 	rsbsvc	r6, r5, #460	; 0x1cc
 188:	5f006563 	svcpl	0x00006563
 18c:	6e69755f 	mcrvs	5, 3, r7, cr9, cr15, {2}
 190:	745f3874 	ldrbvc	r3, [pc], #-2164	; 198 <_Min_Heap_Size-0x68>
 194:	6f687300 	svcvs	0x00687300
 198:	75207472 	strvc	r7, [r0, #-1138]!	; 0xfffffb8e
 19c:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
 1a0:	2064656e 	rsbcs	r6, r4, lr, ror #10
 1a4:	00746e69 	rsbseq	r6, r4, r9, ror #28
 1a8:	20554e47 	subscs	r4, r5, r7, asr #28
 1ac:	20313143 	eorscs	r3, r1, r3, asr #2
 1b0:	322e3231 	eorcc	r3, lr, #268435459	; 0x10000003
 1b4:	2d20302e 	stccs	0, cr3, [r0, #-184]!	; 0xffffff48
 1b8:	7570636d 	ldrbvc	r6, [r0, #-877]!	; 0xfffffc93
 1bc:	726f633d 	rsbvc	r6, pc, #-201326592	; 0xf4000000
 1c0:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 1c4:	2d20336d 	stccs	3, cr3, [r0, #-436]!	; 0xfffffe4c
 1c8:	7568746d 	strbvc	r7, [r8, #-1133]!	; 0xfffffb93
 1cc:	2d20626d 	sfmcs	f6, 4, [r0, #-436]!	; 0xfffffe4c
 1d0:	6f6c666d 	svcvs	0x006c666d
 1d4:	612d7461 			; <UNDEFINED> instruction: 0x612d7461
 1d8:	733d6962 	teqvc	sp, #1605632	; 0x188000
 1dc:	2074666f 	rsbscs	r6, r4, pc, ror #12
 1e0:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
 1e4:	613d6863 	teqvs	sp, r3, ror #16
 1e8:	37766d72 			; <UNDEFINED> instruction: 0x37766d72
 1ec:	2d206d2d 	stccs	13, cr6, [r0, #-180]!	; 0xffffff4c
 1f0:	672d2067 	strvs	r2, [sp, -r7, rrx]!
 1f4:	324f2d20 	subcc	r2, pc, #32, 26	; 0x800
 1f8:	74732d20 	ldrbtvc	r2, [r3], #-3360	; 0xfffff2e0
 1fc:	6e673d64 	cdpvs	13, 6, cr3, cr7, cr4, {3}
 200:	20313175 	eorscs	r3, r1, r5, ror r1
 204:	7473662d 	ldrbtvc	r6, [r3], #-1581	; 0xfffff9d3
 208:	2d6b6361 	stclcs	3, cr6, [fp, #-388]!	; 0xfffffe7c
 20c:	67617375 			; <UNDEFINED> instruction: 0x67617375
 210:	662d2065 	strtvs	r2, [sp], -r5, rrx
 214:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 218:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 21c:	6365732d 	cmnvs	r5, #-1275068416	; 0xb4000000
 220:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 224:	662d2073 			; <UNDEFINED> instruction: 0x662d2073
 228:	61746164 	cmnvs	r4, r4, ror #2
 22c:	6365732d 	cmnvs	r5, #-1275068416	; 0xb4000000
 230:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 234:	662d2073 			; <UNDEFINED> instruction: 0x662d2073
 238:	652d6f6e 	strvs	r6, [sp, #-3950]!	; 0xfffff092
 23c:	70656378 	rsbvc	r6, r5, r8, ror r3
 240:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 244:	50410073 	subpl	r0, r1, r3, ror r0
 248:	4e453242 	cdpmi	2, 4, cr3, cr5, cr2, {2}
 24c:	6e750052 	mrcvs	0, 3, r0, cr5, cr2, {2}
 250:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
 254:	63206465 			; <UNDEFINED> instruction: 0x63206465
 258:	00726168 	rsbseq	r6, r2, r8, ror #2
 25c:	50424841 	subpl	r4, r2, r1, asr #16
 260:	63736572 	cmnvs	r3, #478150656	; 0x1c800000
 264:	6c626154 	stfvse	f6, [r2], #-336	; 0xfffffeb0
 268:	45520065 	ldrbmi	r0, [r2, #-101]	; 0xffffff9b
 26c:	00544553 	subseq	r4, r4, r3, asr r5
 270:	31425041 	cmpcc	r2, r1, asr #32
 274:	52545352 	subspl	r5, r4, #1207959553	; 0x48000001
 278:	755f5f00 	ldrbvc	r5, [pc, #-3840]	; fffff380 <BootRAM+0xef6fb21>
 27c:	33746e69 	cmncc	r4, #1680	; 0x690
 280:	00745f32 	rsbseq	r5, r4, r2, lsr pc
 284:	31425041 	cmpcc	r2, r1, asr #32
 288:	00524e45 	subseq	r4, r2, r5, asr #28
 28c:	32425041 	subcc	r5, r2, #65	; 0x41
 290:	52545352 	subspl	r5, r4, #1207959553	; 0x48000001
 294:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
 298:	6f6c2067 	svcvs	0x006c2067
 29c:	7520676e 	strvc	r6, [r0, #-1902]!	; 0xfffff892
 2a0:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
 2a4:	2064656e 	rsbcs	r6, r4, lr, ror #10
 2a8:	00746e69 	rsbseq	r6, r4, r9, ror #28
 2ac:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
 2b0:	6e496d65 	cdpvs	13, 4, cr6, cr9, cr5, {3}
 2b4:	6c007469 	cfstrsvs	mvf7, [r0], {105}	; 0x69
 2b8:	20676e6f 	rsbcs	r6, r7, pc, ror #28
 2bc:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
 2c0:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
 2c4:	73795300 	cmnvc	r9, #0, 6
 2c8:	436d6574 	cmnmi	sp, #116, 10	; 0x1d000000
 2cc:	4365726f 	cmnmi	r5, #-268435450	; 0xf0000006
 2d0:	6b636f6c 	blvs	18dc088 <_Min_Stack_Size+0x18dbc88>
 2d4:	73795300 	cmnvc	r9, #0, 6
 2d8:	436d6574 	cmnmi	sp, #116, 10	; 0x1d000000
 2dc:	4365726f 	cmnmi	r5, #-268435450	; 0xf0000006
 2e0:	6b636f6c 	blvs	18dc098 <_Min_Stack_Size+0x18dbc98>
 2e4:	61647055 	qdsubvs	r7, r5, r4
 2e8:	41006574 	tstmi	r0, r4, ror r5
 2ec:	72504250 	subsvc	r4, r0, #80, 4
 2f0:	54637365 	strbtpl	r7, [r3], #-869	; 0xfffffc9b
 2f4:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
 2f8:	6f687300 	svcvs	0x00687300
 2fc:	69207472 	stmdbvs	r0!, {r1, r4, r5, r6, sl, ip, sp, lr}
 300:	5200746e 	andpl	r7, r0, #1845493760	; 0x6e000000
 304:	545f4343 	ldrbpl	r4, [pc], #-835	; 30c <_Min_Heap_Size+0x10c>
 308:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
 30c:	2f006665 	svccs	0x00006665
 310:	656d6f68 	strbvs	r6, [sp, #-3944]!	; 0xfffff098
 314:	7265532f 	rsbvc	r5, r5, #-1140850688	; 0xbc000000
 318:	736e6570 	cmnvc	lr, #112, 10	; 0x1c000000
 31c:	6f72502f 	svcvs	0x0072502f
 320:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
 324:	676e696d 	strbvs	r6, [lr, -sp, ror #18]!
 328:	7065522f 	rsbvc	r5, r5, pc, lsr #4
 32c:	7469736f 	strbtvc	r7, [r9], #-879	; 0xfffffc91
 330:	2f79726f 	svccs	0x0079726f
 334:	706d6953 	rsbvc	r6, sp, r3, asr r9
 338:	654d656c 	strbvs	r6, [sp, #-1388]	; 0xfffffa94
 33c:	536f6574 	cmnpl	pc, #116, 10	; 0x1d000000
 340:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
 344:	652f6e6f 	strvs	r6, [pc, #-3695]!	; fffff4dd <BootRAM+0xef6fc7e>
 348:	6c2d7478 	cfstrsvs	mvf7, [sp], #-480	; 0xfffffe20
 34c:	2f736269 	svccs	0x00736269
 350:	69736d63 	ldmdbvs	r3!, {r0, r1, r5, r6, r8, sl, fp, sp, lr}^
 354:	74732f73 	ldrbtvc	r2, [r3], #-3955	; 0xfffff08d
 358:	79732f6d 	ldmdbvc	r3!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp}^
 35c:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
 360:	6d74735f 	ldclvs	3, cr7, [r4, #-380]!	; 0xfffffe84
 364:	31663233 	cmncc	r6, r3, lsr r2
 368:	632e7878 			; <UNDEFINED> instruction: 0x632e7878
 36c:	6f682f00 	svcvs	0x00682f00
 370:	532f656d 			; <UNDEFINED> instruction: 0x532f656d
 374:	65707265 	ldrbvs	r7, [r0, #-613]!	; 0xfffffd9b
 378:	502f736e 	eorpl	r7, pc, lr, ror #6
 37c:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
 380:	696d6d61 	stmdbvs	sp!, {r0, r5, r6, r8, sl, fp, sp, lr}^
 384:	522f676e 	eorpl	r6, pc, #28835840	; 0x1b80000
 388:	736f7065 	cmnvc	pc, #101	; 0x65
 38c:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
 390:	69532f79 	ldmdbvs	r3, {r0, r3, r4, r5, r6, r8, r9, sl, fp, sp}^
 394:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
 398:	6574654d 	ldrbvs	r6, [r4, #-1357]!	; 0xfffffab3
 39c:	6174536f 	cmnvs	r4, pc, ror #6
 3a0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 3a4:	7478652f 	ldrbtvc	r6, [r8], #-1327	; 0xfffffad1
 3a8:	62696c2d 	rsbvs	r6, r9, #11520	; 0x2d00
 3ac:	6d632f73 	stclvs	15, cr2, [r3, #-460]!	; 0xfffffe34
 3b0:	2f736973 	svccs	0x00736973
 3b4:	2f6d7473 	svccs	0x006d7473
 3b8:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 3bc:	5f707574 	svcpl	0x00707574
 3c0:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 3c4:	30316632 	eorscc	r6, r1, r2, lsr r6
 3c8:	2e627833 	mcrcs	8, 3, r7, cr2, cr3, {1}
 3cc:	4e470073 	mcrmi	0, 2, r0, cr7, cr3, {3}
 3d0:	53412055 	movtpl	r2, #4181	; 0x1055
 3d4:	332e3220 			; <UNDEFINED> instruction: 0x332e3220
 3d8:	65520039 	ldrbvs	r0, [r2, #-57]	; 0xffffffc7
 3dc:	5f746573 	svcpl	0x00746573
 3e0:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
 3e4:	0072656c 	rsbseq	r6, r2, ip, ror #10
 3e8:	6e695f5f 	mcrvs	15, 3, r5, cr9, cr15, {2}
 3ec:	615f7469 	cmpvs	pc, r9, ror #8
 3f0:	79617272 	stmdbvc	r1!, {r1, r4, r5, r6, r9, ip, sp, lr}^
 3f4:	6174735f 	cmnvs	r4, pc, asr r3
 3f8:	73007472 	movwvc	r7, #1138	; 0x472
 3fc:	5f657a69 	svcpl	0x00657a69
 400:	5f5f0074 	svcpl	0x005f0074
 404:	6362696c 	cmnvs	r2, #108, 18	; 0x1b0000
 408:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
 40c:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
 410:	00796172 	rsbseq	r6, r9, r2, ror r1
 414:	72705f5f 	rsbsvc	r5, r0, #380	; 0x17c
 418:	696e6965 	stmdbvs	lr!, {r0, r2, r5, r6, r8, fp, sp, lr}^
 41c:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
 420:	5f796172 	svcpl	0x00796172
 424:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 428:	6f630074 	svcvs	0x00630074
 42c:	00746e75 	rsbseq	r6, r4, r5, ror lr
 430:	20554e47 	subscs	r4, r5, r7, asr #28
 434:	20373143 	eorscs	r3, r7, r3, asr #2
 438:	312e3131 			; <UNDEFINED> instruction: 0x312e3131
 43c:	2d20302e 	stccs	0, cr3, [r0, #-184]!	; 0xffffff48
 440:	6f6c666d 	svcvs	0x006c666d
 444:	612d7461 			; <UNDEFINED> instruction: 0x612d7461
 448:	733d6962 	teqvc	sp, #1605632	; 0x188000
 44c:	2074666f 	rsbscs	r6, r4, pc, ror #12
 450:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
 454:	20626d75 	rsbcs	r6, r2, r5, ror sp
 458:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
 45c:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
 460:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
 464:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
 468:	616d2d20 	cmnvs	sp, r0, lsr #26
 46c:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
 470:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
 474:	206d2d37 	rsbcs	r2, sp, r7, lsr sp
 478:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
 47c:	2d20734f 	stccs	3, cr7, [r0, #-316]!	; 0xfffffec4
 480:	2d6f6e66 	stclcs	14, cr6, [pc, #-408]!	; 2f0 <_Min_Heap_Size+0xf0>
 484:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 488:	206e6974 	rsbcs	r6, lr, r4, ror r9
 48c:	7566662d 	strbvc	r6, [r6, #-1581]!	; 0xfffff9d3
 490:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
 494:	732d6e6f 			; <UNDEFINED> instruction: 0x732d6e6f
 498:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 49c:	20736e6f 	rsbscs	r6, r3, pc, ror #28
 4a0:	6164662d 	cmnvs	r4, sp, lsr #12
 4a4:	732d6174 			; <UNDEFINED> instruction: 0x732d6174
 4a8:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
 4ac:	00736e6f 	rsbseq	r6, r3, pc, ror #28
 4b0:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
 4b4:	622f0074 	eorvs	r0, pc, #116	; 0x74
 4b8:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
 4bc:	2f726964 	svccs	0x00726964
 4c0:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
 4c4:	55422f64 	strbpl	r2, [r2, #-3940]	; 0xfffff09c
 4c8:	2f444c49 	svccs	0x00444c49
 4cc:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
 4d0:	342d6269 	strtcc	r6, [sp], #-617	; 0xfffffd97
 4d4:	302e312e 	eorcc	r3, lr, lr, lsr #2
 4d8:	6975622f 	ldmdbvs	r5!, {r0, r1, r2, r3, r5, r9, sp, lr}^
 4dc:	6e2d646c 	cdpvs	4, 2, cr6, cr13, cr12, {3}
 4e0:	2f6f6e61 	svccs	0x006f6e61
 4e4:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
 4e8:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
 4ec:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
 4f0:	68742f69 	ldmdavs	r4!, {r0, r3, r5, r6, r8, r9, sl, fp, sp}^
 4f4:	2f626d75 	svccs	0x00626d75
 4f8:	6d2d3776 	stcvs	7, cr3, [sp, #-472]!	; 0xfffffe28
 4fc:	666f6e2f 	strbtvs	r6, [pc], -pc, lsr #28
 500:	656e2f70 	strbvs	r2, [lr, #-3952]!	; 0xfffff090
 504:	62696c77 	rsbvs	r6, r9, #30464	; 0x7700
 508:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
 50c:	696d2f63 	stmdbvs	sp!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
 510:	6c006373 	stcvs	3, cr6, [r0], {115}	; 0x73
 514:	20676e6f 	rsbcs	r6, r7, pc, ror #28
 518:	62756f64 	rsbsvs	r6, r5, #100, 30	; 0x190
 51c:	5f00656c 	svcpl	0x0000656c
 520:	6572705f 	ldrbvs	r7, [r2, #-95]!	; 0xffffffa1
 524:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 528:	7272615f 	rsbsvc	r6, r2, #-1073741801	; 0xc0000017
 52c:	655f7961 	ldrbvs	r7, [pc, #-2401]	; fffffbd3 <BootRAM+0xef70374>
 530:	5f00646e 	svcpl	0x0000646e
 534:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
 538:	72615f74 	rsbvc	r5, r1, #116, 30	; 0x1d0
 53c:	5f796172 	svcpl	0x00796172
 540:	00646e65 	rsbeq	r6, r4, r5, ror #28
 544:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
 548:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
 54c:	2f2e2e2f 	svccs	0x002e2e2f
 550:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
 554:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
 558:	2f2e2e2f 	svccs	0x002e2e2f
 55c:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
 560:	6c2f6269 	sfmvs	f6, 4, [pc], #-420	; 3c4 <_Min_Heap_Size+0x1c4>
 564:	2f636269 	svccs	0x00636269
 568:	6373696d 	cmnvs	r3, #1785856	; 0x1b4000
 56c:	696e692f 	stmdbvs	lr!, {r0, r1, r2, r3, r5, r8, fp, sp, lr}^
 570:	00632e74 	rsbeq	r2, r3, r4, ror lr

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
  tmp = RCC->CFGR & RCC_CFGR_SWS;
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  switch (tmp)
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
  10:	0000000c 	andeq	r0, r0, ip
  SystemCoreClock >>= tmp;  
  14:	00000000 	andeq	r0, r0, r0
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
  18:	08000194 	stmdaeq	r0, {r2, r4, r7, r8}
  SystemCoreClock >>= tmp;  
  1c:	00000004 	andeq	r0, r0, r4
}
  20:	0000000c 	andeq	r0, r0, ip
      pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
  24:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
      pllmull = ( pllmull >> 18U) + 2U;
  28:	7c020001 	stcvc	0, cr0, [r2], {1}
  2c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      if (pllsource == 0x00U)
  30:	0000000c 	andeq	r0, r0, ip
        if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
  34:	00000020 	andeq	r0, r0, r0, lsr #32
          SystemCoreClock = HSE_VALUE * pllmull;
  38:	08000198 	stmdaeq	r0, {r3, r4, r7, r8}
  3c:	00000002 	andeq	r0, r0, r2
          SystemCoreClock = (HSE_VALUE >> 1U) * pllmull;
  40:	0000000c 	andeq	r0, r0, ip
  44:	00000020 	andeq	r0, r0, r0, lsr #32
  48:	00000000 	andeq	r0, r0, r0
  4c:	0000005c 	andeq	r0, r0, ip, asr r0
  50:	0000000c 	andeq	r0, r0, ip
  54:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  58:	7c020001 	stcvc	0, cr0, [r2], {1}
  5c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  60:	00000018 	andeq	r0, r0, r8, lsl r0
  64:	00000050 	andeq	r0, r0, r0, asr r0
  68:	080001e8 	stmdaeq	r0, {r3, r5, r6, r7, r8}
  6c:	00000048 	andeq	r0, r0, r8, asr #32
  70:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
  74:	86038504 	strhi	r8, [r3], -r4, lsl #10
  78:	00018e02 	andeq	r8, r1, r2, lsl #28

Disassembly of section .debug_loclists:

00000000 <.debug_loclists>:
  tmp = RCC->CFGR & RCC_CFGR_SWS;
   0:	0000009b 	muleq	r0, fp, r0
   4:	00040005 	andeq	r0, r4, r5
  switch (tmp)
   8:	00000000 	andeq	r0, r0, r0
   c:	00000002 	andeq	r0, r0, r2
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
  10:	00000000 	andeq	r0, r0, r0
  SystemCoreClock >>= tmp;  
  14:	00060000 	andeq	r0, r6, r0
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
  18:	04000000 	streq	r0, [r0], #-0
  SystemCoreClock >>= tmp;  
  1c:	30020400 	andcc	r0, r2, r0, lsl #8
}
  20:	0804049f 	stmdaeq	r4, {r0, r1, r2, r3, r4, r7, sl}
      pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
  24:	3c007305 	stccc	3, cr7, [r0], {5}
      pllmull = ( pllmull >> 18U) + 2U;
  28:	08049f1a 	stmdaeq	r4, {r1, r3, r4, r8, r9, sl, fp, ip, pc}
  2c:	0453010e 	ldrbeq	r0, [r3], #-270	; 0xfffffef2
      if (pllsource == 0x00U)
  30:	72121a14 	andsvc	r1, r2, #20, 20	; 0x14000
        if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
  34:	3f253400 	svccc	0x00253400
          SystemCoreClock = HSE_VALUE * pllmull;
  38:	0000031a 	andeq	r0, r0, sl, lsl r3
  3c:	94220000 	strtls	r0, [r2], #-0
          SystemCoreClock = (HSE_VALUE >> 1U) * pllmull;
  40:	1aff0801 	bne	fffc204c <BootRAM+0xef327ed>
  44:	2422049f 	strtcs	r0, [r2], #-1183	; 0xfffffb61
  48:	02005301 	andeq	r5, r0, #67108864	; 0x4000000
	...
  54:	00000600 	andeq	r0, r0, r0, lsl #12
  58:	00040000 	andeq	r0, r4, r0
  5c:	9f30020e 	svcls	0x0030020e
  60:	02242204 	eoreq	r2, r4, #4, 4	; 0x40000000
  64:	24049f30 	strcs	r9, [r4], #-3888	; 0xfffff0d0
  68:	0073072a 	rsbseq	r0, r3, sl, lsr #14
  6c:	1a24414e 	bne	9105ac <_Min_Stack_Size+0x9101ac>
  70:	3e30049f 	mrccc	4, 1, r0, cr0, cr15, {4}
  74:	40045301 	andmi	r5, r4, r1, lsl #6
  78:	00530146 	subseq	r0, r3, r6, asr #2
  7c:	00000002 	andeq	r0, r0, r2
  80:	00060000 	andeq	r0, r6, r0
  84:	04000000 	streq	r0, [r0], #-0
  88:	30020e00 	andcc	r0, r2, r0, lsl #28
  8c:	2622049f 			; <UNDEFINED> instruction: 0x2622049f
  90:	049f3002 	ldreq	r3, [pc], #2	; 98 <_Min_Heap_Size-0x168>
  94:	71072c26 	tstvc	r7, r6, lsr #24
  98:	243c4000 	ldrtcs	r4, [ip], #-0
  9c:	30009f1a 	andcc	r9, r0, sl, lsl pc
  a0:	05000000 	streq	r0, [r0, #-0]
  a4:	00000400 	andeq	r0, r0, r0, lsl #8
  a8:	00000000 	andeq	r0, r0, r0
  ac:	06000000 	streq	r0, [r0], -r0
  b0:	080001f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8}
  b4:	010e0004 	tsteq	lr, r4
  b8:	3c120454 	cfldrscc	mvf0, [r2], {84}	; 0x54
  bc:	01005401 	tsteq	r0, r1, lsl #8
  c0:	06000100 	streq	r0, [r0], -r0, lsl #2
  c4:	080001f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8}
  c8:	010a0004 	tsteq	sl, r4
  cc:	3c120456 	cfldrscc	mvf0, [r2], {86}	; 0x56
  d0:	Address 0x00000000000000d0 is out of bounds.


Disassembly of section .debug_line_str:

00000000 <.debug_line_str>:
  tmp = RCC->CFGR & RCC_CFGR_SWS;
   0:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; ffffff4c <BootRAM+0xef706ed>
   4:	65532f65 	ldrbvs	r2, [r3, #-3941]	; 0xfffff09b
  switch (tmp)
   8:	6e657072 	mcrvs	0, 3, r7, cr5, cr2, {3}
   c:	72502f73 	subsvc	r2, r0, #460	; 0x1cc
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
  10:	6172676f 	cmnvs	r2, pc, ror #14
  SystemCoreClock >>= tmp;  
  14:	6e696d6d 	cdpvs	13, 6, cr6, cr9, cr13, {3}
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
  18:	65522f67 	ldrbvs	r2, [r2, #-3943]	; 0xfffff099
  SystemCoreClock >>= tmp;  
  1c:	69736f70 	ldmdbvs	r3!, {r4, r5, r6, r8, r9, sl, fp, sp, lr}^
}
  20:	79726f74 	ldmdbvc	r2!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
      pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
  24:	6d69532f 	stclvs	3, cr5, [r9, #-188]!	; 0xffffff44
      pllmull = ( pllmull >> 18U) + 2U;
  28:	4d656c70 	stclmi	12, cr6, [r5, #-448]!	; 0xfffffe40
  2c:	6f657465 	svcvs	0x00657465
      if (pllsource == 0x00U)
  30:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
        if ((RCC->CFGR & RCC_CFGR_PLLXTPRE) != (uint32_t)RESET)
  34:	2f6e6f69 	svccs	0x006e6f69
          SystemCoreClock = HSE_VALUE * pllmull;
  38:	616d632e 	cmnvs	sp, lr, lsr #6
  3c:	732f656b 			; <UNDEFINED> instruction: 0x732f656b
          SystemCoreClock = (HSE_VALUE >> 1U) * pllmull;
  40:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
  44:	6265642f 	rsbvs	r6, r5, #788529152	; 0x2f000000
  48:	742f6775 	strtvc	r6, [pc], #-1909	; 50 <_Min_Heap_Size-0x1b0>
  4c:	65677261 	strbvs	r7, [r7, #-609]!	; 0xfffffd9f
  50:	732f7374 			; <UNDEFINED> instruction: 0x732f7374
  54:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
  58:	33303166 	teqcc	r0, #-2147483623	; 0x80000019
  5c:	6f682f00 	svcvs	0x00682f00
  60:	532f656d 			; <UNDEFINED> instruction: 0x532f656d
  64:	65707265 	ldrbvs	r7, [r0, #-613]!	; 0xfffffd9b
  68:	502f736e 	eorpl	r7, pc, lr, ror #6
  6c:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
  70:	696d6d61 	stmdbvs	sp!, {r0, r5, r6, r8, sl, fp, sp, lr}^
  74:	522f676e 	eorpl	r6, pc, #28835840	; 0x1b80000
  78:	736f7065 	cmnvc	pc, #101	; 0x65
  7c:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
  80:	69532f79 	ldmdbvs	r3, {r0, r3, r4, r5, r6, r8, r9, sl, fp, sp}^
  84:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
  88:	6574654d 	ldrbvs	r6, [r4, #-1357]!	; 0xfffffab3
  8c:	6174536f 	cmnvs	r4, pc, ror #6
  90:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
  94:	7478652f 	ldrbtvc	r6, [r8], #-1327	; 0xfffffad1
  98:	62696c2d 	rsbvs	r6, r9, #11520	; 0x2d00
  9c:	6d632f73 	stclvs	15, cr2, [r3, #-460]!	; 0xfffffe34
  a0:	2f736973 	svccs	0x00736973
  a4:	006d7473 	rsbeq	r7, sp, r3, ror r4
  a8:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  ac:	5f707574 	svcpl	0x00707574
  b0:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
  b4:	30316632 	eorscc	r6, r1, r2, lsr r6
  b8:	2e627833 	mcrcs	8, 3, r7, cr2, cr3, {1}
  bc:	Address 0x00000000000000bc is out of bounds.

